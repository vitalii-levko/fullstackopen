{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","className","Filter","props","value","onChange","handler","PersonForm","onSubmit","formHandler","nameValue","nameHandler","numberValue","numberHandler","type","Person","name","number","onClick","deleteHandler","Persons","persons","map","person","key","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","notificationMessage","setNotificationMessage","notificationClass","setNotificationClass","personsToShow","filter","toLowerCase","includes","useEffect","personService","initialPersons","event","target","preventDefault","some","window","confirm","find","changedPerson","returnedPerson","p","setTimeout","catch","error","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b46b05c.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n}\r\nexport default { getAll, create, remove, update }\r\n","import React, { useState, useEffect } from 'react';\r\nimport personService from './services/persons';\r\n\r\nconst Notification = ({ message, className }) => {\r\n  if (message === null || className === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n      filter shown with <input\r\n        value={props.value}\r\n        onChange={props.handler}\r\n      />\r\n   </div>\r\n  );\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.formHandler}>\r\n      <div>\r\n        name: <input\r\n          value={props.nameValue}\r\n          onChange={props.nameHandler}\r\n        />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value={props.numberValue}\r\n          onChange={props.numberHandler}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <div>\r\n      {props.name} {props.number} <button onClick={props.deleteHandler}>delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Persons = (props) => {\r\n  return (props.persons.map(person =>\r\n    <Person\r\n      key={person.id}\r\n      name={person.name}\r\n      number={person.number}\r\n      deleteHandler={() => props.deleteHandler(person.id)}\r\n    />\r\n  ));\r\n}\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newFilter, setNewFilter] = useState('');\r\n  const [notificationMessage, setNotificationMessage] = useState(null);\r\n  const [notificationClass, setNotificationClass] = useState(null);\r\n\r\n  const personsToShow = !newFilter\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value);\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\r\n        const changedPerson = { ...person, number: newNumber };\r\n\r\n        personService\r\n          .update(person.id, changedPerson)\r\n          .then(returnedPerson => {\r\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson));\r\n            setNewName('');\r\n            setNewNumber('');\r\n            setNotificationMessage(`Updated ${returnedPerson.name}`);\r\n            setNotificationClass('success');\r\n            setTimeout(() => {\r\n              setNotificationMessage(null);\r\n              setNotificationClass(null);\r\n            }, 5000);\r\n          })\r\n          .catch(error => {\r\n            setNewName('');\r\n            setNewNumber('');\r\n            setNotificationMessage(\r\n              `Information of ${person.name} has already been removed from server`\r\n            );\r\n            setNotificationClass('error');\r\n            setTimeout(() => {\r\n              setNotificationMessage(null);\r\n              setNotificationClass(null);\r\n            }, 5000);\r\n            setPersons(persons.filter(p => p.id !== person.id));\r\n          });\r\n      }\r\n    } else {\r\n      const personObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson));\r\n          setNewName('');\r\n          setNewNumber('');\r\n          setNewFilter('');\r\n          setNotificationMessage(`Added ${returnedPerson.name}`);\r\n          setNotificationClass('success');\r\n          setTimeout(() => {\r\n            setNotificationMessage(null);\r\n            setNotificationClass(null);\r\n          }, 5000);\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          setNotificationMessage(error.response.data.error);\r\n          setNotificationClass('error');\r\n          setTimeout(() => {\r\n            setNotificationMessage(null);\r\n            setNotificationClass(null);\r\n          }, 5000);\r\n        });\r\n    }\r\n  }\r\n\r\n  const deleteRecord = (id) => {\r\n    const person = persons.find(person => person.id === id);\r\n\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== id));\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage(\r\n            `Information of ${person.name} has already been removed from server`\r\n          );\r\n          setNotificationClass('error');\r\n          setTimeout(() => {\r\n            setNotificationMessage(null);\r\n            setNotificationClass(null);\r\n          }, 5000);\r\n          setPersons(persons.filter(p => p.id !== person.id));\r\n        });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification\r\n        message={notificationMessage}\r\n        className={notificationClass}\r\n      />\r\n      <Filter\r\n        value={newFilter}\r\n        handler={handleFilterChange}\r\n      />\r\n      <h3>Add a new</h3>\r\n      <PersonForm\r\n        formHandler={addPerson}\r\n        nameValue={newName}\r\n        nameHandler={handleNameChange}\r\n        numberValue={newNumber}\r\n        numberHandler={handleNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons\r\n        persons={personsToShow}\r\n        deleteHandler={deleteRecord}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}